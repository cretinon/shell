version: 2.1

orbs:
  codecov: codecov/codecov@5

commands:
  circleci-image-update:
    description: 'update apt repo'
    steps:
      - run:
          name: circleci image update
          command: sudo mkdir -p /var/lib/apt/lists/partial ; sudo chmod 755 /var/lib/apt/lists/ ; echo "sudo rm -rf /etc/apt/sources.list.d/github_git-lfs.list"; sudo apt update

  install-bats:
    description: 'install bats from apt'
    steps:
      - run:
          name: Install bats
          command: sudo apt install -y bats bats-assert bats-file bats-support

  install-shellcheck:
    description: 'install shellcheck from apt'
    steps:
      - run:
          name: Install shellcheck
          command: sudo apt install -y shellcheck

  install-kcov:
    description: 'install kcov manually'
    steps:
      - run:
          name: Install kcov
          command: cd /tmp ; wget http://archive.ubuntu.com/ubuntu/pool/universe/k/kcov/kcov_43+dfsg-2_amd64.deb ; sudo dpkg -i kcov_43+dfsg-2_amd64.deb

  checkout-prereq:
    description: 'mkdir'
    steps:
      - run:
          name : mkdir destination directory for git checkout
          command: mkdir -p git/shell

  prepare-our-environment:
    description: 'set all prereq for my_warp'
    steps:
      - run:
          name: set all prereq for my_warp
          command: chmod +x ${HOME}/project/git/shell/my_warp.sh ; mkdir ${HOME}/conf ; echo -e "VERBOSE=false\nDEBUG=false\nFUNC_LIST=()\nGIT_DIR=\"\${HOME}/project/git\"" > ${HOME}/conf/my_warp.conf

  circleci-image-result:
    description: 'results of previous build steps'
    steps:
      - run:
          name : Results of previous build steps
          command: type bats ; bats --version ; type shellcheck ; shellcheck --version ; type kcov ; kcov --version ; echo -n "pwd:"; pwd ; find . ; echo "my_warp.conf" ; cat ${HOME}/conf/my_warp.conf

  run-shellcheck:
    description: 'run shellcheck'
    steps:
      - run:
          name: Run shellcheck
          command: shellcheck git/shell/lib_shell.sh git/shell/my_warp.sh

  run-bats:
    description: 'run bats'
    steps:
      - run:
          name: Run bats
          command: GIT_DIR="${HOME}/project/git" bats --verbose-run git/shell/bats/tests.bats

  run-kcov:
    description: 'run kcov'
    steps:
      - run:
          name: Run kcov
          command: GIT_DIR="${HOME}/project/git" kcov --include-path=${HOME}/project/git/shell/ --exclude-path=${HOME}/project/git/shell/.git/,${HOME}/project/git/shell/README.md /tmp/dest_kcov ${HOME}/project/git/shell/my_warp.sh --lib shell -b

  test-my_warp-in-circleci:
    description: 'test my_warp in circleci'
    steps:
      - run:
          name: test my_warp in circleci
          command: ${HOME}/project/git/shell/my_warp.sh --lib shell hello_world

  test-libshell-function-in-circleci:
    description: 'test libshell function in circleci'
    steps:
      - run:
          name: test libshell function in circleci
          command: source ${HOME}/conf/my_warp.conf ; source ${HOME}/project/git/shell/lib_shell.sh ; _os_arch

jobs:
  build-and-test:
    docker:
      - image: cimg/base:current
    steps:
      - circleci-image-update
      - install-bats
      - install-shellcheck
      - install-kcov
      - checkout-prereq
      - checkout:
          path: git/shell
      - prepare-our-environment
      - circleci-image-result
      - run-shellcheck
      - run-bats
      - run-kcov
      - test-my_warp-in-circleci
      - test-libshell-function-in-circleci
      - store_artifacts:
          path: /tmp/dest_kcov
      - name: Upload reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
        with:
          fail_ci_if_error: true
          file: /tmp/dest_kcov/my_warp.sh/cobertura.xml

workflows:
  test-libshell:
     jobs:
       - build-and-test
